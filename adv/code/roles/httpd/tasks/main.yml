---
- name: Mount GlusterFS volume
  mount: fstype=glusterfs
         name={{ gluster.mount_dir }}
         state=mounted
         src={{ groups['web'][0] }}:/{{ gluster.vol_name}}
         opts="defaults,_netdev"
  register: mount_result
  when: groups['gluster_slaves'] and "'remount' not in mount_result.stdout"
  tags: [deployment, glusterfs]

- name: Install httpd
  yum: name=httpd
       state=present
       update_cache=yes
  tags: [deployment, httpd]

- name: Make sure httpd is running but not on startup
  service: name=httpd
           state=started
           enabled=no
  tags: [deployment, httpd]

- name: Copy index html
  template: src=index.html
            dest=/var/www/html/
  tags: [configuration, httpd]

- name: Make sure log folder exists
  file: path={{ httpd.log_folder }}
        state=directory
        owner=apache
        group=apache
  tags: [configuration, httpd]

- name: Copy http config file
  template: src=httpd.conf
            dest=/etc/httpd/conf/
            owner=apache
            group=apache
  notify: reload httpd
  tags: [configuration, httpd]

- name: Copy server-status virtualhost
  template: src=monitor.conf
            dest=/etc/httpd/conf.d/
  notify: reload httpd
  tags: [cluster, configuration]

- name: Check stonith status
  shell: pcs property show stonith-enabled
  register: stonith_status
  tags: [cluster, configuration]

- name: Disable stonith
  shell: pcs property set stonith-enabled=false
  when: "'true' in stonith_status.stdout"
  run_once: true
  tags: [cluster, configuration]

- name: Check if httpd is already a resource
  shell: pcs resource
  register: resources_result
  tags: [cluster, configuration]

- name: Set a VIP
  shell: "pcs resource create ClusterIP ocf:heartbeat:IPaddr2 ip={{ clustering.vip }} cidr_netmask=32 op monitor interval=1min"
  run_once: true
  when: "'No resources' in resources_result.stdout"
  tags: [cluster, configuration]

- name: Check resource defaults
  shell: pcs resource defaults
  register: resource_defaults
  run_once: true
  tags: [cluster, configuration]

- name: Change defaults
  shell: "pcs resource op defaults timeout=240s"
  run_once: true
  when: "'No defaults set' in resource_defaults.stdout"
  tags: [cluster, configuration]

- name: Activate httpd in clustering
  shell: pcs resource create Webserver ocf:heartbeat:apache configfile={{ httpd.config_file }} statusurl="{{ httpd.status_url }}"
  run_once: true
  when: "'No resources' in resources_result.stdout"
  tags: [cluster, configuration]

- name: Ensure resources run on the same host
  shell: pcs constraint colocation add Webserver with ClusterIP INFINITY
  run_once: true
  tags: [cluster, configuration]

- name: And resources run in order
  shell: pcs constraint order ClusterIP then Webserver
  run_once: true
  tags: [cluster, configuration]